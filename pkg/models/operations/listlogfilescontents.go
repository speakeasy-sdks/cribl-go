// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/cribl-go/pkg/models/shared"
	"net/http"
)

type ListLogFilesContentsRequest struct {
	// Epoch timestamp of the earliest event (includes rolled files present on disk)
	Et *int64 `queryParam:"style=form,explode=true,name=et"`
	// query string[] optional file or files to query
	Files *string `queryParam:"style=form,explode=true,name=files"`
	// Filter
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// id of the group to query
	GroupID *string `queryParam:"style=form,explode=true,name=groupId"`
	// Maximum number of log lines to retrieve starting from offset.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Epoch timestamp of the latest event (includes rolled files present on disk)
	Lt *int64 `queryParam:"style=form,explode=true,name=lt"`
	// type of logs request single multi group
	Type string `queryParam:"style=form,explode=true,name=type"`
}

func (o *ListLogFilesContentsRequest) GetEt() *int64 {
	if o == nil {
		return nil
	}
	return o.Et
}

func (o *ListLogFilesContentsRequest) GetFiles() *string {
	if o == nil {
		return nil
	}
	return o.Files
}

func (o *ListLogFilesContentsRequest) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

func (o *ListLogFilesContentsRequest) GetGroupID() *string {
	if o == nil {
		return nil
	}
	return o.GroupID
}

func (o *ListLogFilesContentsRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListLogFilesContentsRequest) GetLt() *int64 {
	if o == nil {
		return nil
	}
	return o.Lt
}

func (o *ListLogFilesContentsRequest) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type ListLogFilesContentsResponse struct {
	ContentType string
	// a list of any objects
	LogFileContents *shared.LogFileContents
	StatusCode      int
	RawResponse     *http.Response
}

func (o *ListLogFilesContentsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListLogFilesContentsResponse) GetLogFileContents() *shared.LogFileContents {
	if o == nil {
		return nil
	}
	return o.LogFileContents
}

func (o *ListLogFilesContentsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListLogFilesContentsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
