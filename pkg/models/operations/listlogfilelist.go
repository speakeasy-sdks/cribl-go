// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/cribl-go/pkg/models/shared"
	"net/http"
)

type ListLogFileListRequest struct {
	// query array[string] optional List of allowed-filename wildcard patterns
	Allow *string `queryParam:"style=form,explode=true,name=allow"`
	// Search depth for "manual" mode
	Depth *int64 `queryParam:"style=form,explode=true,name=depth"`
	// Discovery Mode (default is "auto")
	Mode *string `queryParam:"style=form,explode=true,name=mode"`
	// Search directory for "manual" mode
	Path *string `queryParam:"style=form,explode=true,name=path"`
}

func (o *ListLogFileListRequest) GetAllow() *string {
	if o == nil {
		return nil
	}
	return o.Allow
}

func (o *ListLogFileListRequest) GetDepth() *int64 {
	if o == nil {
		return nil
	}
	return o.Depth
}

func (o *ListLogFileListRequest) GetMode() *string {
	if o == nil {
		return nil
	}
	return o.Mode
}

func (o *ListLogFileListRequest) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

type ListLogFileListResponse struct {
	ContentType string
	// a list of EdgeFile objects
	EdgeFiles   *shared.EdgeFiles
	StatusCode  int
	RawResponse *http.Response
}

func (o *ListLogFileListResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListLogFileListResponse) GetEdgeFiles() *shared.EdgeFiles {
	if o == nil {
		return nil
	}
	return o.EdgeFiles
}

func (o *ListLogFileListResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListLogFileListResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
