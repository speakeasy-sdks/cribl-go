// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"cribl/pkg/models/shared"
	"net/http"
)

type GetJobResultRequest struct {
	// Group the job belongs to
	Group string `pathParam:"style=simple,explode=false,name=group"`
	// Instance id of the job to get results for
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Maximum files to get job results
	MaxFiles *int64 `queryParam:"style=form,explode=true,name=maxFiles"`
}

func (o *GetJobResultRequest) GetGroup() string {
	if o == nil {
		return ""
	}
	return o.Group
}

func (o *GetJobResultRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetJobResultRequest) GetMaxFiles() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxFiles
}

type GetJobResultResponse struct {
	ContentType string
	// a list of any objects
	JobResult   *shared.JobResult
	StatusCode  int
	RawResponse *http.Response
}

func (o *GetJobResultResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetJobResultResponse) GetJobResult() *shared.JobResult {
	if o == nil {
		return nil
	}
	return o.JobResult
}

func (o *GetJobResultResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetJobResultResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
