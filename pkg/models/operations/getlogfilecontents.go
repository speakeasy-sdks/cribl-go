// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"cribl/pkg/models/shared"
	"net/http"
)

type GetLogFileContentsRequest struct {
	// in the current log file to fetch the log events upto.
	EndOffset *int64 `queryParam:"style=form,explode=true,name=endOffset"`
	// Epoch timestamp of the earliest event (includes rolled files present on disk)
	Et *int64 `queryParam:"style=form,explode=true,name=et"`
	// Filter
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// Group ID (optional)
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
	// Job id
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Maximum number of log lines to retrieve starting from offset.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Epoch timestamp of the latest event (includes rolled files present on disk)
	Lt *int64 `queryParam:"style=form,explode=true,name=lt"`
	// Offset in the current log file to fetch the log events from.
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
}

func (o *GetLogFileContentsRequest) GetEndOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.EndOffset
}

func (o *GetLogFileContentsRequest) GetEt() *int64 {
	if o == nil {
		return nil
	}
	return o.Et
}

func (o *GetLogFileContentsRequest) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

func (o *GetLogFileContentsRequest) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

func (o *GetLogFileContentsRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetLogFileContentsRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *GetLogFileContentsRequest) GetLt() *int64 {
	if o == nil {
		return nil
	}
	return o.Lt
}

func (o *GetLogFileContentsRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

type GetLogFileContentsResponse struct {
	ContentType string
	// a list of any objects
	LogFileContents *shared.LogFileContents
	StatusCode      int
	RawResponse     *http.Response
}

func (o *GetLogFileContentsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetLogFileContentsResponse) GetLogFileContents() *shared.LogFileContents {
	if o == nil {
		return nil
	}
	return o.LogFileContents
}

func (o *GetLogFileContentsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetLogFileContentsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
