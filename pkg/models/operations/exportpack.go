// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"cribl/pkg/models/shared"
	"net/http"
)

type ExportPackRequest struct {
	// Filename of the exported Pack
	Filename *string `queryParam:"style=form,explode=true,name=filename"`
	// Pack name
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Export mode, one of "merge_safe", "merge", "default_only"
	Mode string `queryParam:"style=form,explode=true,name=mode"`
}

func (o *ExportPackRequest) GetFilename() *string {
	if o == nil {
		return nil
	}
	return o.Filename
}

func (o *ExportPackRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ExportPackRequest) GetMode() string {
	if o == nil {
		return ""
	}
	return o.Mode
}

type ExportPackResponse struct {
	ContentType string
	// a list of PackInfo objects
	PackInfos   *shared.PackInfos
	StatusCode  int
	RawResponse *http.Response
}

func (o *ExportPackResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ExportPackResponse) GetPackInfos() *shared.PackInfos {
	if o == nil {
		return nil
	}
	return o.PackInfos
}

func (o *ExportPackResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ExportPackResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
