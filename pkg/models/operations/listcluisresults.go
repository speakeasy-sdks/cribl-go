// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/cribl-go/pkg/models/shared"
	"net/http"
)

type ListCluisResultsRequest struct {
	// Search query
	Query string `queryParam:"style=form,explode=true,name=query"`
	// Search query context, either "stream" or "edge"
	Context *string `queryParam:"style=form,explode=true,name=context"`
}

func (o *ListCluisResultsRequest) GetQuery() string {
	if o == nil {
		return ""
	}
	return o.Query
}

func (o *ListCluisResultsRequest) GetContext() *string {
	if o == nil {
		return nil
	}
	return o.Context
}

type ListCluisResultsResponse struct {
	// a list of CluiItem objects
	CluiItems   *shared.CluiItems
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}

func (o *ListCluisResultsResponse) GetCluiItems() *shared.CluiItems {
	if o == nil {
		return nil
	}
	return o.CluiItems
}

func (o *ListCluisResultsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListCluisResultsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListCluisResultsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
