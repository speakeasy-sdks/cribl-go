// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/cribl-go/pkg/models/shared"
	"net/http"
)

type GetChangedFilesRequest struct {
	// Commit ID
	ID *string `queryParam:"style=form,explode=true,name=ID"`
	// Group ID
	Group *string `queryParam:"style=form,explode=true,name=group"`
}

func (o *GetChangedFilesRequest) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetChangedFilesRequest) GetGroup() *string {
	if o == nil {
		return nil
	}
	return o.Group
}

type GetChangedFilesResponse struct {
	// a list of GitFilesResponse objects
	ChangedFiles *shared.ChangedFiles
	ContentType  string
	StatusCode   int
	RawResponse  *http.Response
}

func (o *GetChangedFilesResponse) GetChangedFiles() *shared.ChangedFiles {
	if o == nil {
		return nil
	}
	return o.ChangedFiles
}

func (o *GetChangedFilesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetChangedFilesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetChangedFilesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
