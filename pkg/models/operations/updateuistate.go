// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/cribl-go/pkg/models/shared"
	"net/http"
)

type UpdateUIStateRequest struct {
	// UI State Patch object
	UIStatePatch *shared.UIStatePatch `request:"mediaType=application/json"`
	// UI state key
	Key string `pathParam:"style=simple,explode=false,name=key"`
}

func (o *UpdateUIStateRequest) GetUIStatePatch() *shared.UIStatePatch {
	if o == nil {
		return nil
	}
	return o.UIStatePatch
}

func (o *UpdateUIStateRequest) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

type UpdateUIStateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// a list of any objects
	UIStates *shared.UIStates
}

func (o *UpdateUIStateResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateUIStateResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateUIStateResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateUIStateResponse) GetUIStates() *shared.UIStates {
	if o == nil {
		return nil
	}
	return o.UIStates
}
