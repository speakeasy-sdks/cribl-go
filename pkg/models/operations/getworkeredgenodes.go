// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"cribl/pkg/models/shared"
	"net/http"
)

type GetWorkerEdgeNodesRequest struct {
	// Filter expression evaluated against nodes
	FilterExp *string `queryParam:"style=form,explode=true,name=filterExp"`
	// Maximum number of nodes to return
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Pagination offset
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Sorting expression evaluated against nodes
	SortExp *string `queryParam:"style=form,explode=true,name=sortExp"`
}

func (o *GetWorkerEdgeNodesRequest) GetFilterExp() *string {
	if o == nil {
		return nil
	}
	return o.FilterExp
}

func (o *GetWorkerEdgeNodesRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *GetWorkerEdgeNodesRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *GetWorkerEdgeNodesRequest) GetSortExp() *string {
	if o == nil {
		return nil
	}
	return o.SortExp
}

type GetWorkerEdgeNodesResponse struct {
	ContentType string
	// a list of MasterWorkerEntry objects
	MasterWorkerEntries *shared.MasterWorkerEntries
	StatusCode          int
	RawResponse         *http.Response
}

func (o *GetWorkerEdgeNodesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetWorkerEdgeNodesResponse) GetMasterWorkerEntries() *shared.MasterWorkerEntries {
	if o == nil {
		return nil
	}
	return o.MasterWorkerEntries
}

func (o *GetWorkerEdgeNodesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetWorkerEdgeNodesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
