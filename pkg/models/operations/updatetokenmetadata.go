// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"cribl/pkg/models/shared"
	"net/http"
)

type UpdateTokenMetadataRequest struct {
	// UpdateHecTokenRequest object
	UpdateHecTokenRequest *shared.UpdateHecTokenRequest `request:"mediaType=application/json"`
	// hec input id
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// token to update
	Token string `pathParam:"style=simple,explode=false,name=token"`
}

func (o *UpdateTokenMetadataRequest) GetUpdateHecTokenRequest() *shared.UpdateHecTokenRequest {
	if o == nil {
		return nil
	}
	return o.UpdateHecTokenRequest
}

func (o *UpdateTokenMetadataRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateTokenMetadataRequest) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

// UpdateTokenMetadata200ApplicationJSON - a list of any objects
type UpdateTokenMetadata200ApplicationJSON struct {
	// number of items present in the items array
	Count *int64                   `json:"count,omitempty"`
	Items []map[string]interface{} `json:"items,omitempty"`
}

func (o *UpdateTokenMetadata200ApplicationJSON) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateTokenMetadata200ApplicationJSON) GetItems() []map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateTokenMetadataResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// a list of any objects
	UpdateTokenMetadata200ApplicationJSONObject *UpdateTokenMetadata200ApplicationJSON
}

func (o *UpdateTokenMetadataResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateTokenMetadataResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateTokenMetadataResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateTokenMetadataResponse) GetUpdateTokenMetadata200ApplicationJSONObject() *UpdateTokenMetadata200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.UpdateTokenMetadata200ApplicationJSONObject
}
