// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/cribl-go/pkg/models/shared"
	"net/http"
)

type GetGroupsRequest struct {
	// additional fields to add to results: git.commit, git.localChanges, git.log
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// filter to specific product: "stream" or "edge"
	Product *string `queryParam:"style=form,explode=true,name=product"`
}

func (o *GetGroupsRequest) GetFields() *string {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *GetGroupsRequest) GetProduct() *string {
	if o == nil {
		return nil
	}
	return o.Product
}

type GetGroupsResponse struct {
	// a list of ConfigGroup objects
	ConfigGroups *shared.ConfigGroups
	ContentType  string
	StatusCode   int
	RawResponse  *http.Response
}

func (o *GetGroupsResponse) GetConfigGroups() *shared.ConfigGroups {
	if o == nil {
		return nil
	}
	return o.ConfigGroups
}

func (o *GetGroupsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetGroupsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetGroupsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
