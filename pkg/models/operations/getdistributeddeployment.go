// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/cribl-go/pkg/models/shared"
	"net/http"
)

type GetDistributedDeploymentRequest struct {
	// Filter for worker/group type, either "worker" for Stream or "managed-edge" for Edge
	Mode *string `queryParam:"style=form,explode=true,name=mode"`
}

func (o *GetDistributedDeploymentRequest) GetMode() *string {
	if o == nil {
		return nil
	}
	return o.Mode
}

type GetDistributedDeploymentResponse struct {
	ContentType string
	// a list of DistributedSummary objects
	DistributedSummaries *shared.DistributedSummaries
	StatusCode           int
	RawResponse          *http.Response
}

func (o *GetDistributedDeploymentResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetDistributedDeploymentResponse) GetDistributedSummaries() *shared.DistributedSummaries {
	if o == nil {
		return nil
	}
	return o.DistributedSummaries
}

func (o *GetDistributedDeploymentResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetDistributedDeploymentResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
