// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"cribl/pkg/models/shared"
	"net/http"
)

type UpdatetNotificationTargetRequest struct {
	// NotificationTarget object to be updated
	NotificationTarget *shared.NotificationTarget `request:"mediaType=application/json"`
	// Unique ID
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *UpdatetNotificationTargetRequest) GetNotificationTarget() *shared.NotificationTarget {
	if o == nil {
		return nil
	}
	return o.NotificationTarget
}

func (o *UpdatetNotificationTargetRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type UpdatetNotificationTargetResponse struct {
	ContentType string
	// a list of NotificationTarget objects
	NotificationTargets *shared.NotificationTargets
	StatusCode          int
	RawResponse         *http.Response
}

func (o *UpdatetNotificationTargetResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdatetNotificationTargetResponse) GetNotificationTargets() *shared.NotificationTargets {
	if o == nil {
		return nil
	}
	return o.NotificationTargets
}

func (o *UpdatetNotificationTargetResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdatetNotificationTargetResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
