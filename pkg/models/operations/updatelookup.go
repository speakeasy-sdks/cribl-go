// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UpdateLookupRequestBody2 struct {
	// File content.
	Content *string `json:"content,omitempty"`
	// Brief description of this lookup. Optional.
	Description *string `json:"description,omitempty"`
	// Filename with the lookup table. Required.
	ID string `json:"id"`
	// File size. Optional.
	Size *int64 `json:"size,omitempty"`
	// One or more tags related to this lookup. Optional.
	Tags *string `json:"tags,omitempty"`
}

func (o *UpdateLookupRequestBody2) GetContent() *string {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *UpdateLookupRequestBody2) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateLookupRequestBody2) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateLookupRequestBody2) GetSize() *int64 {
	if o == nil {
		return nil
	}
	return o.Size
}

func (o *UpdateLookupRequestBody2) GetTags() *string {
	if o == nil {
		return nil
	}
	return o.Tags
}

// UpdateLookupRequestBody1FileInfo - Uploaded file information
type UpdateLookupRequestBody1FileInfo struct {
	Filename string `json:"filename"`
}

func (o *UpdateLookupRequestBody1FileInfo) GetFilename() string {
	if o == nil {
		return ""
	}
	return o.Filename
}

type UpdateLookupRequestBody1 struct {
	// Brief description of this lookup. Optional.
	Description *string `json:"description,omitempty"`
	// Uploaded file information
	FileInfo *UpdateLookupRequestBody1FileInfo `json:"fileInfo,omitempty"`
	// Filename with the lookup table. Required.
	ID string `json:"id"`
	// File size. Optional.
	Size *int64 `json:"size,omitempty"`
	// One or more tags related to this lookup. Optional.
	Tags *string `json:"tags,omitempty"`
}

func (o *UpdateLookupRequestBody1) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateLookupRequestBody1) GetFileInfo() *UpdateLookupRequestBody1FileInfo {
	if o == nil {
		return nil
	}
	return o.FileInfo
}

func (o *UpdateLookupRequestBody1) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateLookupRequestBody1) GetSize() *int64 {
	if o == nil {
		return nil
	}
	return o.Size
}

func (o *UpdateLookupRequestBody1) GetTags() *string {
	if o == nil {
		return nil
	}
	return o.Tags
}

type UpdateLookupRequest struct {
	// LookupFile object to be updated
	RequestBody interface{} `request:"mediaType=application/json"`
	// Unique ID
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *UpdateLookupRequest) GetRequestBody() interface{} {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *UpdateLookupRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type UpdateLookup200ApplicationJSON2 struct {
	// File content.
	Content *string `json:"content,omitempty"`
	// Brief description of this lookup. Optional.
	Description *string `json:"description,omitempty"`
	// Filename with the lookup table. Required.
	ID string `json:"id"`
	// File size. Optional.
	Size *int64 `json:"size,omitempty"`
	// One or more tags related to this lookup. Optional.
	Tags *string `json:"tags,omitempty"`
}

func (o *UpdateLookup200ApplicationJSON2) GetContent() *string {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *UpdateLookup200ApplicationJSON2) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateLookup200ApplicationJSON2) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateLookup200ApplicationJSON2) GetSize() *int64 {
	if o == nil {
		return nil
	}
	return o.Size
}

func (o *UpdateLookup200ApplicationJSON2) GetTags() *string {
	if o == nil {
		return nil
	}
	return o.Tags
}

// UpdateLookup200ApplicationJSON1FileInfo - Uploaded file information
type UpdateLookup200ApplicationJSON1FileInfo struct {
	Filename string `json:"filename"`
}

func (o *UpdateLookup200ApplicationJSON1FileInfo) GetFilename() string {
	if o == nil {
		return ""
	}
	return o.Filename
}

type UpdateLookup200ApplicationJSON1 struct {
	// Brief description of this lookup. Optional.
	Description *string `json:"description,omitempty"`
	// Uploaded file information
	FileInfo *UpdateLookup200ApplicationJSON1FileInfo `json:"fileInfo,omitempty"`
	// Filename with the lookup table. Required.
	ID string `json:"id"`
	// File size. Optional.
	Size *int64 `json:"size,omitempty"`
	// One or more tags related to this lookup. Optional.
	Tags *string `json:"tags,omitempty"`
}

func (o *UpdateLookup200ApplicationJSON1) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateLookup200ApplicationJSON1) GetFileInfo() *UpdateLookup200ApplicationJSON1FileInfo {
	if o == nil {
		return nil
	}
	return o.FileInfo
}

func (o *UpdateLookup200ApplicationJSON1) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateLookup200ApplicationJSON1) GetSize() *int64 {
	if o == nil {
		return nil
	}
	return o.Size
}

func (o *UpdateLookup200ApplicationJSON1) GetTags() *string {
	if o == nil {
		return nil
	}
	return o.Tags
}

type UpdateLookupResponse struct {
	ContentType string
	// a list of LookupFile objects
	LookupFile  interface{}
	StatusCode  int
	RawResponse *http.Response
}

func (o *UpdateLookupResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateLookupResponse) GetLookupFile() interface{} {
	if o == nil {
		return nil
	}
	return o.LookupFile
}

func (o *UpdateLookupResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateLookupResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
