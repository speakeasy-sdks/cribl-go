// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"cribl/pkg/models/shared"
	"net/http"
)

type UpdateInputIDRequest struct {
	// Input object to be updated
	RequestBody interface{} `request:"mediaType=application/json"`
	// Unique ID
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *UpdateInputIDRequest) GetRequestBody() interface{} {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *UpdateInputIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type UpdateInputIDResponse struct {
	ContentType string
	// a list of Input objects
	Inputs      *shared.Inputs
	StatusCode  int
	RawResponse *http.Response
}

func (o *UpdateInputIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateInputIDResponse) GetInputs() *shared.Inputs {
	if o == nil {
		return nil
	}
	return o.Inputs
}

func (o *UpdateInputIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateInputIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
