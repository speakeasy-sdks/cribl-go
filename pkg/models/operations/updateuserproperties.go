// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"cribl/pkg/models/shared"
	"net/http"
)

type UpdateUserPropertiesRequest struct {
	// UserProfile object
	UserProfile *shared.UserProfile `request:"mediaType=application/json"`
	// Unique ID
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *UpdateUserPropertiesRequest) GetUserProfile() *shared.UserProfile {
	if o == nil {
		return nil
	}
	return o.UserProfile
}

func (o *UpdateUserPropertiesRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type UpdateUserPropertiesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// a list of UserProfile objects
	UserProfiles *shared.UserProfiles
}

func (o *UpdateUserPropertiesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateUserPropertiesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateUserPropertiesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateUserPropertiesResponse) GetUserProfiles() *shared.UserProfiles {
	if o == nil {
		return nil
	}
	return o.UserProfiles
}
