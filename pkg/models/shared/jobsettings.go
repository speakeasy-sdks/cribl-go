// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type JobSettings struct {
	ConcurrentJobLimit          int64  `json:"concurrentJobLimit"`
	ConcurrentScheduledJobLimit int64  `json:"concurrentScheduledJobLimit"`
	ConcurrentSystemJobLimit    int64  `json:"concurrentSystemJobLimit"`
	ConcurrentSystemTaskLimit   int64  `json:"concurrentSystemTaskLimit"`
	ConcurrentTaskLimit         int64  `json:"concurrentTaskLimit"`
	FinishedJobArtifactsLimit   int64  `json:"finishedJobArtifactsLimit"`
	FinishedTaskArtifactsLimit  int64  `json:"finishedTaskArtifactsLimit"`
	JobArtifactsReaperPeriod    string `json:"jobArtifactsReaperPeriod"`
	JobTimeout                  string `json:"jobTimeout"`
	MaxTaskPerc                 int64  `json:"maxTaskPerc"`
	SchedulingPolicy            string `json:"schedulingPolicy"`
	TaskHeartbeatPeriod         int64  `json:"taskHeartbeatPeriod"`
	TaskManifestFlushPeriodMs   int64  `json:"taskManifestFlushPeriodMs"`
	TaskManifestMaxBufferSize   int64  `json:"taskManifestMaxBufferSize"`
	TaskManifestReadBufferSize  string `json:"taskManifestReadBufferSize"`
	TaskPollTimeoutMs           int64  `json:"taskPollTimeoutMs"`
}

func (o *JobSettings) GetConcurrentJobLimit() int64 {
	if o == nil {
		return 0
	}
	return o.ConcurrentJobLimit
}

func (o *JobSettings) GetConcurrentScheduledJobLimit() int64 {
	if o == nil {
		return 0
	}
	return o.ConcurrentScheduledJobLimit
}

func (o *JobSettings) GetConcurrentSystemJobLimit() int64 {
	if o == nil {
		return 0
	}
	return o.ConcurrentSystemJobLimit
}

func (o *JobSettings) GetConcurrentSystemTaskLimit() int64 {
	if o == nil {
		return 0
	}
	return o.ConcurrentSystemTaskLimit
}

func (o *JobSettings) GetConcurrentTaskLimit() int64 {
	if o == nil {
		return 0
	}
	return o.ConcurrentTaskLimit
}

func (o *JobSettings) GetFinishedJobArtifactsLimit() int64 {
	if o == nil {
		return 0
	}
	return o.FinishedJobArtifactsLimit
}

func (o *JobSettings) GetFinishedTaskArtifactsLimit() int64 {
	if o == nil {
		return 0
	}
	return o.FinishedTaskArtifactsLimit
}

func (o *JobSettings) GetJobArtifactsReaperPeriod() string {
	if o == nil {
		return ""
	}
	return o.JobArtifactsReaperPeriod
}

func (o *JobSettings) GetJobTimeout() string {
	if o == nil {
		return ""
	}
	return o.JobTimeout
}

func (o *JobSettings) GetMaxTaskPerc() int64 {
	if o == nil {
		return 0
	}
	return o.MaxTaskPerc
}

func (o *JobSettings) GetSchedulingPolicy() string {
	if o == nil {
		return ""
	}
	return o.SchedulingPolicy
}

func (o *JobSettings) GetTaskHeartbeatPeriod() int64 {
	if o == nil {
		return 0
	}
	return o.TaskHeartbeatPeriod
}

func (o *JobSettings) GetTaskManifestFlushPeriodMs() int64 {
	if o == nil {
		return 0
	}
	return o.TaskManifestFlushPeriodMs
}

func (o *JobSettings) GetTaskManifestMaxBufferSize() int64 {
	if o == nil {
		return 0
	}
	return o.TaskManifestMaxBufferSize
}

func (o *JobSettings) GetTaskManifestReadBufferSize() string {
	if o == nil {
		return ""
	}
	return o.TaskManifestReadBufferSize
}

func (o *JobSettings) GetTaskPollTimeoutMs() int64 {
	if o == nil {
		return 0
	}
	return o.TaskPollTimeoutMs
}
