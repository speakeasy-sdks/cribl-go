// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type DailyUsageMetrics struct {
	EndTime                int64 `json:"endTime"`
	ExemptedLicenseInBytes int64 `json:"exemptedLicenseInBytes"`
	InBytes                int64 `json:"inBytes"`
	InEvents               int64 `json:"inEvents"`
	OutBytes               int64 `json:"outBytes"`
	OutEvents              int64 `json:"outEvents"`
	StartTime              int64 `json:"startTime"`
}

func (o *DailyUsageMetrics) GetEndTime() int64 {
	if o == nil {
		return 0
	}
	return o.EndTime
}

func (o *DailyUsageMetrics) GetExemptedLicenseInBytes() int64 {
	if o == nil {
		return 0
	}
	return o.ExemptedLicenseInBytes
}

func (o *DailyUsageMetrics) GetInBytes() int64 {
	if o == nil {
		return 0
	}
	return o.InBytes
}

func (o *DailyUsageMetrics) GetInEvents() int64 {
	if o == nil {
		return 0
	}
	return o.InEvents
}

func (o *DailyUsageMetrics) GetOutBytes() int64 {
	if o == nil {
		return 0
	}
	return o.OutBytes
}

func (o *DailyUsageMetrics) GetOutEvents() int64 {
	if o == nil {
		return 0
	}
	return o.OutEvents
}

func (o *DailyUsageMetrics) GetStartTime() int64 {
	if o == nil {
		return 0
	}
	return o.StartTime
}
