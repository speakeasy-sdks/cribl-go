// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type Condition struct {
	Conf     map[string]interface{} `json:"__conf"`
	Filename string                 `json:"__filename"`
	Disabled bool                   `json:"disabled"`
	Group    string                 `json:"group"`
	ID       string                 `json:"id"`
	InitTime int64                  `json:"initTime"`
	LoadTime int64                  `json:"loadTime"`
	ModTime  int64                  `json:"modTime"`
	Name     string                 `json:"name"`
	Schema   map[string]interface{} `json:"schema"`
	Uischema map[string]interface{} `json:"uischema"`
	Version  string                 `json:"version"`
}

func (o *Condition) GetConf() map[string]interface{} {
	if o == nil {
		return map[string]interface{}{}
	}
	return o.Conf
}

func (o *Condition) GetFilename() string {
	if o == nil {
		return ""
	}
	return o.Filename
}

func (o *Condition) GetDisabled() bool {
	if o == nil {
		return false
	}
	return o.Disabled
}

func (o *Condition) GetGroup() string {
	if o == nil {
		return ""
	}
	return o.Group
}

func (o *Condition) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Condition) GetInitTime() int64 {
	if o == nil {
		return 0
	}
	return o.InitTime
}

func (o *Condition) GetLoadTime() int64 {
	if o == nil {
		return 0
	}
	return o.LoadTime
}

func (o *Condition) GetModTime() int64 {
	if o == nil {
		return 0
	}
	return o.ModTime
}

func (o *Condition) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Condition) GetSchema() map[string]interface{} {
	if o == nil {
		return map[string]interface{}{}
	}
	return o.Schema
}

func (o *Condition) GetUischema() map[string]interface{} {
	if o == nil {
		return map[string]interface{}{}
	}
	return o.Uischema
}

func (o *Condition) GetVersion() string {
	if o == nil {
		return ""
	}
	return o.Version
}
