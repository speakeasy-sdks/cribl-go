// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type LookupFilesItems2 struct {
	// File content.
	Content *string `json:"content,omitempty"`
	// Brief description of this lookup. Optional.
	Description *string `json:"description,omitempty"`
	// Filename with the lookup table. Required.
	ID string `json:"id"`
	// File size. Optional.
	Size *int64 `json:"size,omitempty"`
	// One or more tags related to this lookup. Optional.
	Tags *string `json:"tags,omitempty"`
}

func (o *LookupFilesItems2) GetContent() *string {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *LookupFilesItems2) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *LookupFilesItems2) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *LookupFilesItems2) GetSize() *int64 {
	if o == nil {
		return nil
	}
	return o.Size
}

func (o *LookupFilesItems2) GetTags() *string {
	if o == nil {
		return nil
	}
	return o.Tags
}

// LookupFilesItems1FileInfo - Uploaded file information
type LookupFilesItems1FileInfo struct {
	Filename string `json:"filename"`
}

func (o *LookupFilesItems1FileInfo) GetFilename() string {
	if o == nil {
		return ""
	}
	return o.Filename
}

type LookupFilesItems1 struct {
	// Brief description of this lookup. Optional.
	Description *string `json:"description,omitempty"`
	// Uploaded file information
	FileInfo *LookupFilesItems1FileInfo `json:"fileInfo,omitempty"`
	// Filename with the lookup table. Required.
	ID string `json:"id"`
	// File size. Optional.
	Size *int64 `json:"size,omitempty"`
	// One or more tags related to this lookup. Optional.
	Tags *string `json:"tags,omitempty"`
}

func (o *LookupFilesItems1) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *LookupFilesItems1) GetFileInfo() *LookupFilesItems1FileInfo {
	if o == nil {
		return nil
	}
	return o.FileInfo
}

func (o *LookupFilesItems1) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *LookupFilesItems1) GetSize() *int64 {
	if o == nil {
		return nil
	}
	return o.Size
}

func (o *LookupFilesItems1) GetTags() *string {
	if o == nil {
		return nil
	}
	return o.Tags
}

// LookupFiles - a list of LookupFile objects
type LookupFiles struct {
	// number of items present in the items array
	Count *int64        `json:"count,omitempty"`
	Items []interface{} `json:"items,omitempty"`
}

func (o *LookupFiles) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *LookupFiles) GetItems() []interface{} {
	if o == nil {
		return nil
	}
	return o.Items
}
