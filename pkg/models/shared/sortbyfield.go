// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SortByFieldDirection string

const (
	SortByFieldDirectionAscending  SortByFieldDirection = "ascending"
	SortByFieldDirectionDescending SortByFieldDirection = "descending"
)

func (e SortByFieldDirection) ToPointer() *SortByFieldDirection {
	return &e
}

func (e *SortByFieldDirection) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ascending":
		fallthrough
	case "descending":
		*e = SortByFieldDirection(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SortByFieldDirection: %v", v)
	}
}

type SortByFieldNullPosition string

const (
	SortByFieldNullPositionNullsFirst SortByFieldNullPosition = "nullsFirst"
	SortByFieldNullPositionNullsLast  SortByFieldNullPosition = "nullsLast"
)

func (e SortByFieldNullPosition) ToPointer() *SortByFieldNullPosition {
	return &e
}

func (e *SortByFieldNullPosition) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "nullsFirst":
		fallthrough
	case "nullsLast":
		*e = SortByFieldNullPosition(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SortByFieldNullPosition: %v", v)
	}
}

type SortByField struct {
	Direction    SortByFieldDirection    `json:"direction"`
	FieldName    string                  `json:"fieldName"`
	NullPosition SortByFieldNullPosition `json:"nullPosition"`
}

func (o *SortByField) GetDirection() SortByFieldDirection {
	if o == nil {
		return SortByFieldDirection("")
	}
	return o.Direction
}

func (o *SortByField) GetFieldName() string {
	if o == nil {
		return ""
	}
	return o.FieldName
}

func (o *SortByField) GetNullPosition() SortByFieldNullPosition {
	if o == nil {
		return SortByFieldNullPosition("")
	}
	return o.NullPosition
}
