// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type ProcessEntry struct {
	Env           map[string]interface{} `json:"env,omitempty"`
	ID            string                 `json:"id"`
	Pid           *int64                 `json:"pid,omitempty"`
	RestartOnExit bool                   `json:"restartOnExit"`
	Restarts      int64                  `json:"restarts"`
	StartTime     int64                  `json:"startTime"`
	Type          string                 `json:"type"`
}

func (o *ProcessEntry) GetEnv() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.Env
}

func (o *ProcessEntry) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ProcessEntry) GetPid() *int64 {
	if o == nil {
		return nil
	}
	return o.Pid
}

func (o *ProcessEntry) GetRestartOnExit() bool {
	if o == nil {
		return false
	}
	return o.RestartOnExit
}

func (o *ProcessEntry) GetRestarts() int64 {
	if o == nil {
		return 0
	}
	return o.Restarts
}

func (o *ProcessEntry) GetStartTime() int64 {
	if o == nil {
		return 0
	}
	return o.StartTime
}

func (o *ProcessEntry) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}
