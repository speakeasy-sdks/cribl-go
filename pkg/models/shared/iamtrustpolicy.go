// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type IAMTrustPolicyStatementConditionStringEquals struct {
}

type IAMTrustPolicyStatementCondition struct {
	StringEquals *IAMTrustPolicyStatementConditionStringEquals `json:"StringEquals,omitempty"`
}

func (o *IAMTrustPolicyStatementCondition) GetStringEquals() *IAMTrustPolicyStatementConditionStringEquals {
	if o == nil {
		return nil
	}
	return o.StringEquals
}

type IAMTrustPolicyStatementPrincipal struct {
	Aws string `json:"AWS"`
}

func (o *IAMTrustPolicyStatementPrincipal) GetAws() string {
	if o == nil {
		return ""
	}
	return o.Aws
}

type IAMTrustPolicyStatement struct {
	Action    []string                          `json:"Action"`
	Condition *IAMTrustPolicyStatementCondition `json:"Condition,omitempty"`
	Effect    string                            `json:"Effect"`
	Principal IAMTrustPolicyStatementPrincipal  `json:"Principal"`
}

func (o *IAMTrustPolicyStatement) GetAction() []string {
	if o == nil {
		return []string{}
	}
	return o.Action
}

func (o *IAMTrustPolicyStatement) GetCondition() *IAMTrustPolicyStatementCondition {
	if o == nil {
		return nil
	}
	return o.Condition
}

func (o *IAMTrustPolicyStatement) GetEffect() string {
	if o == nil {
		return ""
	}
	return o.Effect
}

func (o *IAMTrustPolicyStatement) GetPrincipal() IAMTrustPolicyStatementPrincipal {
	if o == nil {
		return IAMTrustPolicyStatementPrincipal{}
	}
	return o.Principal
}

type IAMTrustPolicy struct {
	Statement []IAMTrustPolicyStatement `json:"Statement"`
	Version   string                    `json:"Version"`
}

func (o *IAMTrustPolicy) GetStatement() []IAMTrustPolicyStatement {
	if o == nil {
		return []IAMTrustPolicyStatement{}
	}
	return o.Statement
}

func (o *IAMTrustPolicy) GetVersion() string {
	if o == nil {
		return ""
	}
	return o.Version
}
