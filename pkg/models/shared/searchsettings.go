// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type SearchSettings struct {
	FieldSummaryMaxFields      int64       `json:"fieldSummaryMaxFields"`
	FieldSummaryMaxNestedDepth int64       `json:"fieldSummaryMaxNestedDepth"`
	MaxExecutorsPerSearch      int64       `json:"maxExecutorsPerSearch"`
	MaxResultsPerSearch        int64       `json:"maxResultsPerSearch"`
	MaxSearchDuration          interface{} `json:"maxSearchDuration"`
	SearchHistoryMaxJobs       int64       `json:"searchHistoryMaxJobs"`
	SearchHistoryTTL           interface{} `json:"searchHistoryTTL"`
}

func (o *SearchSettings) GetFieldSummaryMaxFields() int64 {
	if o == nil {
		return 0
	}
	return o.FieldSummaryMaxFields
}

func (o *SearchSettings) GetFieldSummaryMaxNestedDepth() int64 {
	if o == nil {
		return 0
	}
	return o.FieldSummaryMaxNestedDepth
}

func (o *SearchSettings) GetMaxExecutorsPerSearch() int64 {
	if o == nil {
		return 0
	}
	return o.MaxExecutorsPerSearch
}

func (o *SearchSettings) GetMaxResultsPerSearch() int64 {
	if o == nil {
		return 0
	}
	return o.MaxResultsPerSearch
}

func (o *SearchSettings) GetMaxSearchDuration() interface{} {
	if o == nil {
		return nil
	}
	return o.MaxSearchDuration
}

func (o *SearchSettings) GetSearchHistoryMaxJobs() int64 {
	if o == nil {
		return 0
	}
	return o.SearchHistoryMaxJobs
}

func (o *SearchSettings) GetSearchHistoryTTL() interface{} {
	if o == nil {
		return nil
	}
	return o.SearchHistoryTTL
}
