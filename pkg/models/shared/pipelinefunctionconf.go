// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type PipelineFunctionConfFunctionSpecificConfigs struct {
}

type PipelineFunctionConf struct {
	Conf PipelineFunctionConfFunctionSpecificConfigs `json:"conf"`
	// Simple description of this step
	Description *string `json:"description,omitempty"`
	// If true, data will not be pushed through this function
	Disabled *bool `json:"disabled,omitempty"`
	// Filter that selects data to be fed through this function
	Filter *string `json:"filter,omitempty"`
	// If true, stops the results of this function from being passed to the downstream functions
	Final *bool `json:"final,omitempty"`
	// Group ID
	GroupID *string `json:"groupId,omitempty"`
	// Function ID
	ID string `json:"id"`
}

func (o *PipelineFunctionConf) GetConf() PipelineFunctionConfFunctionSpecificConfigs {
	if o == nil {
		return PipelineFunctionConfFunctionSpecificConfigs{}
	}
	return o.Conf
}

func (o *PipelineFunctionConf) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *PipelineFunctionConf) GetDisabled() *bool {
	if o == nil {
		return nil
	}
	return o.Disabled
}

func (o *PipelineFunctionConf) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

func (o *PipelineFunctionConf) GetFinal() *bool {
	if o == nil {
		return nil
	}
	return o.Final
}

func (o *PipelineFunctionConf) GetGroupID() *string {
	if o == nil {
		return nil
	}
	return o.GroupID
}

func (o *PipelineFunctionConf) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}
