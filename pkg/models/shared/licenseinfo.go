// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LicenseInfoType string

const (
	LicenseInfoTypeProd  LicenseInfoType = "prod"
	LicenseInfoTypeTrial LicenseInfoType = "trial"
	LicenseInfoTypeFree  LicenseInfoType = "free"
)

func (e LicenseInfoType) ToPointer() *LicenseInfoType {
	return &e
}

func (e *LicenseInfoType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "prod":
		fallthrough
	case "trial":
		fallthrough
	case "free":
		*e = LicenseInfoType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LicenseInfoType: %v", v)
	}
}

type LicenseInfo struct {
	EffectiveClass       LicenseType            `json:"effectiveClass"`
	Email                *string                `json:"email,omitempty"`
	Expiration           int64                  `json:"expiration"`
	GUID                 string                 `json:"guid"`
	IsRunningInSaaS      bool                   `json:"isRunningInSaaS"`
	IsSplunkApp          *bool                  `json:"isSplunkApp,omitempty"`
	LicenseEnforceReason string                 `json:"licenseEnforceReason"`
	Limits               map[string]interface{} `json:"limits"`
	PhoneHome            bool                   `json:"phoneHome"`
	PhoneHomeGrace       int64                  `json:"phoneHomeGrace"`
	Quota                int64                  `json:"quota"`
	Type                 LicenseInfoType        `json:"type"`
}

func (o *LicenseInfo) GetEffectiveClass() LicenseType {
	if o == nil {
		return LicenseType("")
	}
	return o.EffectiveClass
}

func (o *LicenseInfo) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *LicenseInfo) GetExpiration() int64 {
	if o == nil {
		return 0
	}
	return o.Expiration
}

func (o *LicenseInfo) GetGUID() string {
	if o == nil {
		return ""
	}
	return o.GUID
}

func (o *LicenseInfo) GetIsRunningInSaaS() bool {
	if o == nil {
		return false
	}
	return o.IsRunningInSaaS
}

func (o *LicenseInfo) GetIsSplunkApp() *bool {
	if o == nil {
		return nil
	}
	return o.IsSplunkApp
}

func (o *LicenseInfo) GetLicenseEnforceReason() string {
	if o == nil {
		return ""
	}
	return o.LicenseEnforceReason
}

func (o *LicenseInfo) GetLimits() map[string]interface{} {
	if o == nil {
		return map[string]interface{}{}
	}
	return o.Limits
}

func (o *LicenseInfo) GetPhoneHome() bool {
	if o == nil {
		return false
	}
	return o.PhoneHome
}

func (o *LicenseInfo) GetPhoneHomeGrace() int64 {
	if o == nil {
		return 0
	}
	return o.PhoneHomeGrace
}

func (o *LicenseInfo) GetQuota() int64 {
	if o == nil {
		return 0
	}
	return o.Quota
}

func (o *LicenseInfo) GetType() LicenseInfoType {
	if o == nil {
		return LicenseInfoType("")
	}
	return o.Type
}
